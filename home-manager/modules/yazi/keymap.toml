# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "Q",     run = "quit",               desc = "Quit the process" },
	{ on = "q",     run = "quit --no-cwd-file", desc = "Quit the process without outputting cwd-file" },
	{ on = ["<C-w>", "c"], run = "close",              desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

	# Hopping
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },

	{ on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top" },
	{ on = "G",          run = "arrow 99999999",  desc = "Move cursor to the bottom" },

	# Navigation
	{ on = "h", run = "leave", desc = "Go back to the parent directory" },
	# { on = "l", run = "enter", desc = "Enter the child directory" },

	{ on = "H", run = "back",    desc = "Go back to the previous directory" },
	{ on = "L", run = "forward", desc = "Go forward to the next directory" },

	# Toggle
	{ on = "<Space>", run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on", desc = "Select all files" },
	{ on = "<C-r>",   run = "toggle_all",            desc = "Invert selection of all files" },

	# Visual mode
	{ on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

	# Seeking
	{ on = "<PageUp>", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "<PageDown>", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting
	{ on = "K", run = "spot", desc = "Spot hovered file" },

	# Operation
  { on = "l",                run = "plugin smart-enter",          desc = "Enter the child directory, or open the file" },
	{ on = "o",                run = "open --interactive",          desc = "Open selected files interactively" },
	{ on = "<Enter>",          run = "open",                        desc = "Open selected files" },
	{ on = ["m", "m"],         run = "yank --cut",                  desc = "Yank selected files (cut)" },
	{ on = ["p", "p"],         run = "paste",                       desc = "Paste yanked files" },
	{ on = ["p", "o"],         run = "paste --force",               desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = ["p", "l"],         run = "link",                        desc = "Symlink the absolute path of yanked files" },
	{ on = ["p", "L"],         run = "link --relative",             desc = "Symlink the relative path of yanked files" },
	# { on = "<C-->",     run = "hardlink",                    desc = "Hardlink yanked files" },
	{ on = ["u", "y"],         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = ["d", "t"],         run = "remove",                      desc = "Trash selected files" },
	{ on = ["d", "d"],         run = "remove --permanently",        desc = "Permanently delete selected files" },
	{ on = "t",         run = "create",                      desc = "Create a file (ends with / for directories)" },
	{ on = "i",         run = "rename --cursor=start",  desc = "Rename selected file(s), cursor at start" },
	{ on = "a",         run = "rename --cursor=before_ext",  desc = "Rename selected file(s), cursor before extension" },
	{ on = ";",         run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ":",         run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },
	# { on = ".",         run = "hidden toggle",               desc = "Toggle the visibility of hidden files" },
	{ on = [",", "f", "d"],         run = "search --via=fd",             desc = "Search files by name via fd" },
	{ on = [",", "r"],         run = "search --via=rg",             desc = "Search files by content via ripgrep" },
	{ on = [",", "z", "i"],         run = "plugin zoxide",               desc = "Jump to a directory via zoxide" },
	{ on = [",", "f", "f"],         run = "plugin fzf",                  desc = "Jump to a file/directory via fzf" },
  { on = "<C-c>",     run = "escape --search",             desc = "Cancel the ongoing search" },

	# Linemode
	# { on = [ "m", "s" ], run = "linemode size",        desc = "Linemode: size" },
	# { on = [ "m", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	# { on = [ "m", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	# { on = [ "m", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	# { on = [ "m", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	# { on = [ "m", "n" ], run = "linemode none",        desc = "Linemode: none" },

	# Copy
	{ on = ["y", "y"],         run = "yank",                        desc = "Yank selected files (copy)" },
	{ on = [ "y", "p" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	{ on = [ "y", "f" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "y", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },
  { on = ["y", "c"], run = ["plugin copy-file-contents"], desc = "Copy contents of file" },

	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "n", run = "find_arrow",              desc = "Goto the next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Goto the previous found" },

	# Sorting
	{ on = [ "s", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ "s", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ "s", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ "s", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ "s", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ "s", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ "s", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ "s", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ "s", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ "s", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ "s", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ "s", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ "s", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Goto
	{ on = [ "g", "r" ],       run = "cd /",             desc = "Go root" },
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go home" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   desc = "Goto ~/Downloads" },
	# { on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Jump interactively" },

	# Tabs
	{ on = ["<C-t>", "n"], run = "tab_create --current", desc = "Create a new tab with CWD" },

	{ on = ["<C-t>", "1"], run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = ["<C-t>", "2"], run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = ["<C-t>", "3"], run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = ["<C-t>", "4"], run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = ["<C-t>", "5"], run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = ["<C-t>", "6"], run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = ["<C-t>", "7"], run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = ["<C-t>", "8"], run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = ["<C-t>", "9"], run = "tab_switch 8", desc = "Switch to the ninth tab" },

	{ on = ["g", "T"], run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = ["g", "t"], run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	{ on = ["<C-t>", "H"], run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = ["<C-t>", "L"], run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = [",", "t"], run = "tasks_show", desc = "Show task manager" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },

  # plugins
  # { on  = "M", run = "plugin mount", desc = "mount plugin"},

  { on   = [ "c", "m" ], run  = "plugin chmod", desc = "Chmod on selected files" },

  { on   = [ "c", "a" ], run  = "plugin compress", desc = "Archive selected files" },

  { on = ["u", "d"], run = "plugin restore", desc = "Restore/undelete last deleted files/folders from trash" },


  # sudo
  { on = ["S", "p", "p"], run = "plugin sudo-demo --args='paste'", desc = "sudo-demo paste" },
  { on = ["S", "p", "o"], run = "plugin sudo-demo --args='paste --force'", desc = "sudo-demo paste force" },
  { on = ["S", "p", "l"], run = "plugin sudo-demo --args='link'", desc = "sudo-demo link" },
  { on = ["S", "p", "L"], run = "plugin sudo-demo --args='link --relative'", desc = "sudo-demo link relative path" },
  { on = ["S", "i"], run = "plugin sudo-demo --args='rename'", desc = "sudo-demo rename" },
  { on = ["S", "a"], run = "plugin sudo-demo --args='rename'", desc = "sudo-demo rename" },
  { on = ["S", "t"], run = "plugin sudo-demo --args='create'", desc = "sudo-demo create" },
  { on = ["S", "d", "t"], run = "plugin sudo-demo --args='remove'", desc = "sudo-demo trash" },
  { on = ["S", "d", "d"], run = "plugin sudo-demo --args='remove --permanently'", desc = "sudo-demo delete" },

  # relative-motions
  {on = [ "1" ], run = "plugin relative-motions --args=1", desc = "Move in relative steps"},
  {on = [ "2" ], run = "plugin relative-motions --args=2", desc = "Move in relative steps"},
  {on = [ "3" ], run = "plugin relative-motions --args=3", desc = "Move in relative steps"},
  {on = [ "4" ], run = "plugin relative-motions --args=4", desc = "Move in relative steps"},
  {on = [ "5" ], run = "plugin relative-motions --args=5", desc = "Move in relative steps"},
  {on = [ "6" ], run = "plugin relative-motions --args=6", desc = "Move in relative steps"},
  {on = [ "7" ], run = "plugin relative-motions --args=7", desc = "Move in relative steps"},
  {on = [ "8" ], run = "plugin relative-motions --args=8", desc = "Move in relative steps"},
  {on = [ "9" ], run = "plugin relative-motions --args=9", desc = "Move in relative steps"},
]

[tasks]

keymap = [
	{ on = "q", run = "close", desc = "Close task manager" },
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = ["<C-w>", "c"], run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "l", run = "inspect", desc = "Inspect the task" },
	{ on = "<C-c>",       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
]

[spot]

keymap = [
	{ on = "q", run = "close", desc = "Close the spot" },
	{ on = "<Esc>", run = "close", desc = "Close the spot" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },
	{ on = "h", run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "l", run = "swipe 1",  desc = "Swipe to the previous file" },

	# Copy
	{ on = [ "y", "y" ], run = "copy cell", desc = "Copy selected cell" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
]

[pick]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel pick" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the pick" },
	{ on = "l", run = "close --submit", desc = "Submit the pick" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
]

[input]

keymap = [
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },
	{ on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                              desc = "Enter insert mode" },
	{ on = "a", run = "insert --append",                     desc = "Enter append mode" },
	{ on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                              desc = "Enter visual mode" },
	{ on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "w",     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move -999", desc = "Move to the BOL" },
	{ on = "$",      run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },

	# Cut/Yank/Paste
	{ on = "m", run = "delete --cut",                              desc = "Cut the selected characters" },
	{ on = "M", run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
	{ on = "d", run = "delete",                              desc = "Cut the selected characters" },
	{ on = "D", run = [ "delete", "move 999" ],              desc = "Cut until the EOL" },
	{ on = "s", run = [ "delete", "move 1 --in-operating", "move -1", "insert --append"], desc = "Cut the selected characters, and enter insert mode" },
	{ on = "S", run = [ "move -999", "delete", "move 999", "insert"], desc = "Cut until the EOL, and enter insert mode" },
	{ on = "c", run = "delete --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
	{ on = "x", run = [ "delete", "move 1 --in-operating" ], desc = "Cut the current character" },
	{ on = "y", run = "yank",                                      desc = "Copy the selected characters" },
	{ on = "p", run = "paste",                                     desc = "Paste the copied characters after the cursor" },
	{ on = "P", run = "paste --before",                            desc = "Paste the copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
]

[confirm]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
]

[completion]

keymap = [
	{ on = "<C-w>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

	{ on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
]

[help]

keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-w>", run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	# Filtering
	{ on = "f", run = "filter", desc = "Apply a filter for the help items" },
]
